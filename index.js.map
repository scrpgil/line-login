{"version":3,"sources":["../../../src/@ionic-native/plugins/line-login/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;GAoBG;AASH,IAAa,SAAS;IAAS,6BAAiB;IAAhD;;IA4BA,CAAC;IA1BC;;;;;OAKG;IAEH,yBAAK,GAAL;QACE,MAAM,CAAC;IACT,CAAC;IAGD,0BAAM,GAAN;QACE,MAAM,CAAC;IACT,CAAC;IAGD,8BAAU,GAAV;QACE,MAAM,CAAC;IACT,CAAC;IAOH,gBAAC;AAAD,CA5BA,AA4BC,CA5B8B,iBAAiB,GA4B/C;AANM,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAlBA;IADC,OAAO,EAAE;;;;sCAGT;AAGD;IADC,OAAO,EAAE;;;;uCAGT;AAGD;IADC,OAAO,EAAE;;;;2CAGT;AArBU,SAAS;IARrB,MAAM,CAAC;QACN,UAAU,EAAE,WAAW;QACvB,MAAM,EAAE,0BAA0B;QAClC,SAAS,EAAE,2BAA2B;QACtC,IAAI,EAAE,sDAAsD;QAC5D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,SAAS,CA4BrB;SA5BY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Line Login\n * @description\n * This plugin does something\n *\n * @usage\n * ```typescript\n * import { LineLogin } from '@ionic-native/line-login';\n *\n *\n * constructor(private lineLogin: LineLogin) { }\n *\n * ...\n *\n *\n * this.lineLogin.functionName('Hello', 123)\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'LineLogin',\n  plugin: 'cordova-plugin-LineLogin', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'cordova.plugins.LineLogin', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/atake831/cordova-plugin-LineLogin', // the github repository URL for the plugin\n  platforms: ['Android', 'iOS'], // Array of platforms supported, example: ['Android', 'iOS']\n})\n\nexport class LineLogin extends IonicNativePlugin {\n\n  /**\n   * This function does something\n   * @param arg1 {string} Some param to configure something\n   * @param arg2 {number} Another param to configure something\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  login(): Promise<any> {\n    return;\n  }\n\n  @Cordova()\n  logout(): Promise<any> {\n    return;\n  }\n\n  @Cordova()\n  getProfile(): Promise<any> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}